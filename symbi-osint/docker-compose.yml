version: '3.8'

services:
  # Main Symbiont Runtime Service
  symbiont-runtime:
    build:
      context: /home/jascha/Documents/ThirdKey/repos/symbiont
      dockerfile: Dockerfile
    container_name: symbi-osint-runtime
    restart: unless-stopped
    ports:
      - "8080:8080"  # HTTP API
      - "3000:3000"  # MCP Server
    volumes:
      - ./agents:/var/lib/symbi/agents:ro
      - ./config:/etc/symbi
      - symbi-data:/var/lib/symbi/data
      - symbi-logs:/var/lib/symbi/logs
    environment:
      - RUST_LOG=info
      - SYMBI_CONFIG_PATH=/etc/symbi
      - SYMBI_AGENTS_PATH=/var/lib/symbi/agents
      - DATABASE_URL=postgresql://symbi:symbi_password@postgres:5432/symbi_osint
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
    healthcheck:
      test: ["/usr/local/bin/symbi", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - symbi-network

  # REPL Server for Interactive Testing
  symbiont-repl:
    build:
      context: /home/jascha/Documents/ThirdKey/repos/symbiont
      dockerfile: Dockerfile
    container_name: symbi-osint-repl
    restart: unless-stopped
    ports:
      - "9257:9257"  # REPL JSON-RPC port
    volumes:
      - ./agents:/var/lib/symbi/agents:ro
      - ./config:/etc/symbi
      - repl-history:/var/lib/symbi/history
      - repl-snapshots:/var/lib/symbi/snapshots
    environment:
      - RUST_LOG=debug
      - SYMBI_CONFIG_PATH=/etc/symbi
      - SYMBI_AGENTS_PATH=/var/lib/symbi/agents
      - REPL_HISTORY=/var/lib/symbi/history/.repl_history
      - REPL_SNAPSHOTS_DIR=/var/lib/symbi/snapshots
    command: ["symbi", "repl", "--json-rpc", "--port", "9257"]
    depends_on:
      - symbiont-runtime
    networks:
      - symbi-network

  # PostgreSQL Database with Vector Extensions
  postgres:
    image: pgvector/pgvector:pg16
    container_name: symbi-osint-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=symbi_osint
      - POSTGRES_USER=symbi
      - POSTGRES_PASSWORD=symbi_password
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U symbi -d symbi_osint"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - symbi-network

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: symbi-osint-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - symbi-network

  # Qdrant Vector Database for RAG and Intelligence Correlation
  qdrant:
    image: qdrant/qdrant:latest
    container_name: symbi-osint-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant-data:/qdrant/storage
      - ./qdrant-config.yaml:/qdrant/config/production.yaml:ro
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - symbi-network

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: symbi-osint-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - symbi-network

  # Grafana for Monitoring Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: symbi-osint-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Use 3001 to avoid conflict with MCP server
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus
    networks:
      - symbi-network

volumes:
  symbi-data:
    driver: local
  symbi-logs:
    driver: local
  repl-history:
    driver: local
  repl-snapshots:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  qdrant-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  symbi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16